---
kind: Workflow
metadata:
  generateName: indonesia-coastlines-
  namespace: cenv-coastlines-argo
spec:
  serviceAccountName: cenv-coastlines-team-sa-argo
  entrypoint: coastlines-dag
  parallelism: 5
  podGC:
    strategy: OnPodSuccess
    deleteDelayDuration: 120s
  podMetadata:
    annotations:
      karpenter.sh/do-not-disrupt: "true"
  nodeSelector:
    karpenter.sh/capacity-type: "spot"
  workflowMetadata:
    labels:
      app: indonesia-coastlines
  arguments:
    parameters:
      - name: image-tag
        value: "0.9.3-7-g5f20977"
      - name: result-version
        value: "0.9.3"
      - name: tiles-subset
        value: '[\"47,5\",\"24,12\",\"65,1\"]' # Can be [] for all tiles or '[\"200,221\",\"200,221\"]'
      - name: config
        value: configs/indonesia_coastlines_config.yaml
      - name: overwrite
        value: "--no-overwrite"
  templates:
    - name: coastlines-dag
      dag:
        tasks:
          - name: generate-ids
            template: generate
            arguments:
              parameters:
                - name: config
                  value: "{{workflow.parameters.config}}"
                - name: tiles-subset
                  value: "{{workflow.parameters.tiles-subset}}"

          - name: process-id
            depends: generate-ids.Succeeded
            template: process
            withParam: "{{tasks.generate-ids.outputs.result}}"
            arguments:
              parameters:
                - name: id
                  value: "{{item}}"
                - name: config
                  value: "{{workflow.parameters.config}}"
                - name: result-version
                  value: "{{workflow.parameters.result-version}}"
                - name: overwrite
                  value: "{{workflow.parameters.overwrite}}"

          - name: merge
            depends: "process-id.AnySucceeded"
            template: merge-continental
            arguments:
              parameters:
                - name: config
                  value: "{{workflow.parameters.config}}"
                - name: result-version
                  value: "{{workflow.parameters.result-version}}"

    - name: generate
      inputs:
        parameters:
          - name: config
          - name: tiles-subset
      container:
        image: ghcr.io/auspatious/coastlines:{{workflow.parameters.image-tag}}
        command: [bash, -c]
        args:
          - >-
            coastlines-print-tiles
            --config-file {{inputs.parameters.config}}
            --tiles-subset "{{inputs.parameters.tiles-subset}}"

    - name: process
      metadata:
        labels:
          app: "argo-coastlines-process-{{workflow.name}}"
      inputs:
        parameters:
          - name: id
          - name: config
          - name: result-version
          - name: overwrite
      retryStrategy:
        limit: 2
        retryPolicy: Always
      container:
        image: ghcr.io/auspatious/coastlines:{{workflow.parameters.image-tag}}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 220Gi
            cpu: 12.0
          limits:
            cpu: 16.0
            memory: 240Gi
        command: [bash, -c]
        args:
          - |
            set -xe

            echo "Downloading tide model"
            wget -qq https://s3.ap-southeast-2.amazonaws.com/files.auspatious.com/coastlines/indo_tide_models.zip \
              -O /tmp/tide_models.zip && \
            unzip -qq /tmp/tide_models.zip -d /tmp/tide_models_temp &&
            mv /tmp/tide_models_temp /tmp/tide_models

            echo "Running coastlines"
            coastlines-combined \
              --config-path={{inputs.parameters.config}} \
              --study-area={{inputs.parameters.id}} \
              --tide-data-location="/tmp/tide_models/" \
              --output-version={{inputs.parameters.result-version}} \
              {{inputs.parameters.overwrite}}

    - name: merge-continental
      metadata:
        labels:
          app: "argo-coastlines-merge-{{workflow.name}}"
      inputs:
        parameters:
          - name: config
          - name: result-version
      container:
        image: ghcr.io/auspatious/coastlines:{{workflow.parameters.image-tag}}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 60Gi
            cpu: 8.0
          limits:
            cpu: 8.0
            memory: 80Gi
        command: [bash, -c]
        args:
          - |
            coastlines-merge \
              --config-path={{inputs.parameters.config}} \
              --output-version={{inputs.parameters.result-version}}
